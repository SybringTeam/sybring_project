@model IEnumerable<sybring_project.Models.Db.TimeHistory>

@{
    ViewData["Title"] = "Details";
}


<style>
    /* Style for the table */
    .table {
        width: 100%;
        border-collapse: collapse;
    }

        .table th,
        .table td {
            border: 1px solid #dddddd;
            padding: 8px;
            text-align: left;
        }

        /* Style for the table header */
        .table th {
            background-color: #f2f2f2;
        }
</style>

<div>
    <h1>Time History Details</h1>
    @* <h4>Select Week</h4> *@
    @*   <select id="weekNumber"></select> *@

    <div style="overflow-x: auto;">
        <!-- Allow horizontal scrolling for the table -->
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Start Time</th>
                    <th>End Time</th>
                    <th>Lunch Start</th>
                    <th>Lunch End</th>
                    <th>Working Hours</th>
                    <th>Overtime</th>
                    <th>Total Working Hours</th>
                </tr>
            </thead>
            <tbody id="weekDaysBody">
                <!-- Data rows -->
                @foreach (var timeEntry in Model)
                {
                    <tr>
                        <td>@timeEntry.Date.ToShortDateString()</td>
                        <td>@timeEntry.StartWork</td>
                        <td>@timeEntry.EndWork</td>
                        <td>@timeEntry.StartBreak</td>
                        <td>@timeEntry.EndBreak</td>
                        <td>@timeEntry.WorkingHours</td>
                        <td>@timeEntry.Overtime</td>
                        <td>@timeEntry.TotalWorkingHours</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


<script>
    // Fetch red days data from the API
    fetch('https://sholiday.faboul.se/dagar/v2.1/2024')
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            console.log('API Response:', data);

            const allDays = data.dagar;

            const weekNumbers = new Set(allDays.map(day => parseInt(day.vecka)).filter(weekNumber => !isNaN(weekNumber)));
            const selectElement = document.getElementById('weekNumber');
            weekNumbers.forEach(weekNumber => {
                const option = document.createElement('option');
                option.textContent = 'Week ' + weekNumber;
                option.value = weekNumber;
                selectElement.appendChild(option);
            });

            // Dropdown change event listener
            selectElement.addEventListener('change', function () {
                const selectedWeek = parseInt(this.value);
                const selectedWeekDays = allDays.filter(day => parseInt(day.vecka) === selectedWeek);

                // Update table body
                const tbody = document.getElementById('weekDaysBody');
                tbody.innerHTML = ''; // Clear existing tbody content

                // Loop through each day of the selected week
                selectedWeekDays.forEach(day => {
                    const tr = document.createElement('tr');

                    // Create and append cells for each detail
                    const date = new Date(day.datum);
                    const dateCell = document.createElement('td');
                    dateCell.textContent = date.toLocaleDateString();
                    tr.appendChild(dateCell);

                    // Append other details cells similarly...

                    // Apply color based on holiday or Sunday
                    const isSunday = date.getDay() === 0;
                    const isRedDay = day['röd dag'] === 'Ja' || isSunday;
                    tr.style.color = isRedDay ? 'red' : 'black';

                    tbody.appendChild(tr);
                });
                $('.datatable').DataTable();
            });
        })
        .catch(error => {
            console.error('Error fetching data:', error);
        });


</script>






