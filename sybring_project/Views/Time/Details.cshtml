@model IEnumerable<sybring_project.Models.Db.TimeHistory>

@{
    ViewData["Title"] = "Details";
}

<div>
    <table class="table">
        <thead>
            <tr>
                <th></th> <!-- Placeholder for empty cell in the top-left corner -->
                @foreach (var timeEntry in Model)                {
                   
                    <th>@timeEntry.Date.ToShortDateString()</th>
                }
            </tr>
        </thead>
        <tbody id="weekDaysBody">
            <tr>
                <th>Start Time</th>
                @foreach (var timeEntry in Model)
                {
                    <td>@timeEntry.StartWork</td>
                }
            </tr>
            <tr>
                <th>End Time</th>
                @foreach (var timeEntry in Model)
                {
                    <td>@timeEntry.EndWork</td>
                }
            </tr>
            <!-- Additional details rows -->
            <tr>
                <th>Lunch Start</th>
                @foreach (var timeEntry in Model)
                {
                    <td>@timeEntry.StartBreak</td>
                }
            </tr>
            <tr>
                <th>Lunch End</th>
                @foreach (var timeEntry in Model)
                {
                    <td>@timeEntry.EndBreak</td>
                }
            </tr>
            <tr>
                <th>Working hour</th>
                @foreach (var timeEntry in Model)
                {
                    <td>@timeEntry.WorkingHours</td>
                }
            </tr>
            <tr>
                <th>Overtime</th>
                @foreach (var timeEntry in Model)
                {
                    <td>@timeEntry.Overtime</td>
                }
            </tr>
            <tr>
                <th>Summary</th>
                @foreach (var timeEntry in Model)
                {
                    <td>@timeEntry.TotalWorkingHours</td>
                }
            </tr>
            <!-- Add more details rows here -->
        </tbody>
    </table>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    // Fetch red days data from the API
    fetch('https://sholiday.faboul.se/dagar/v2.1/2024')
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            console.log('API Response:', data);

            const allDays = data.dagar;

            const weekNumbers = new Set(allDays.map(day => parseInt(day.vecka)).filter(weekNumber => !isNaN(weekNumber)));
            const selectElement = document.getElementById('weekNumber');
            weekNumbers.forEach(weekNumber => {
                const option = document.createElement('option');
                option.textContent = 'Week ' + weekNumber;
                option.value = weekNumber;
                selectElement.appendChild(option);
            });

            // dropdown

            selectElement.addEventListener('change', function () {
                const selectedWeek = parseInt(this.value);
                const selectedWeekDays = allDays.filter(day => parseInt(day.vecka) === selectedWeek);

                // Update selected week number display
                document.getElementById('selectedWeekNumber').textContent = selectedWeek; // Display selected week number

                // Update table body
                const tbody = document.getElementById('weekDaysBody');
                tbody.innerHTML = ''; // Clear existing tbody content

                // Loop through each day of the selected week
                selectedWeekDays.forEach(day => {
                    const tr = document.createElement('tr');
                    const startDate = new Date(day.datum);
                    const isSunday = startDate.getDay() === 0; // Check if it's Sunday
                    const isRedDay = day['röd dag'] === 'Ja' || isSunday; // Check if it's a holiday or Sunday

                    // Create and append cells for each day
                    for (let i = 0; i < Model.length; i++) {
                        const td = document.createElement('td');
                        td.textContent = Model[i].toLocaleTimeString(); // You can adjust the time format here
                        td.style.color = isRedDay ? 'red' : 'black'; // Apply color based on holiday or Sunday
                        tr.appendChild(td);
                    }

                    tbody.appendChild(tr);
                });
            });
        })
        .catch(error => {
            console.error('Error fetching data:', error);
        });
</script>